#!/usr/bin/env ruby

require "shellwords"
require "tempfile"
require "xml"

ENV["XMLLINT_INDENT"] = "\t"

global_doc = XML::Document.file "etc/global.xml"
global_elem = global_doc.root

def create_xml module_name, template_name, target, vars = {}

	package_name = module_name.gsub "-", ""

	template_path = "etc/#{template_name}.xquery"
	module_path = "txt2-#{module_name}/src/txt2/#{package_name}/#{module_name}-module.xml"
	target_path = "txt2-#{module_name}/#{target}"

	if File.exist? target_path
		template_mtime = File.mtime template_path
		module_mtime = File.mtime module_path
		target_mtime = File.mtime target_path
		return if target_mtime > [ template_mtime, module_mtime ].max
	end

	puts target_path

	temp = Tempfile.new "txt2-rebuild-"

	xqilla_args = [
		"xqilla",
		template_path,
		"-i", module_path,
		"-o", temp.path,
	] + vars.map { |key, value| [ "-v", key, value ] }.flatten

	xqilla_cmd = Shellwords.join xqilla_args

	system xqilla_cmd \
		or raise "Error #{xqilla_cmd}"

	FileUtils.mkdir_p File.dirname target_path

	xmllint_args = [
		"xmllint",
		"--format",
		temp.path,
		"--output",
		target_path,
	]

	xmllint_cmd = Shellwords.join xmllint_args

	system xmllint_cmd \
		or raise "Error #{xmllint_cmd}"


end

File.open "etc/libraries.xml", "w" do
	|file|

	file.write "<libraries>\n"

	Dir.entries("binaries/libraries").sort.each do
		|library|

		next unless library =~ /^(.*)-(jar|bundle)-(.*).jar$/

		library_name = $1
		library_type = $2
		library_version = $3

		file.write "\t<library"

		file.write " name=\"%s\"" % [
			library_name,
		]

		file.write " type=\"%s\"" % [
			library_type,
		]

		file.write " version=\"%s\"" % [
			library_version,
		]

		source_path =
			"binaries/libraries/%s-source-%s.jar" % [
				library_name,
				library_version,
			]

		if File.exist? source_path
			file.write " source=\"yes\""
		end

		file.write "/>\n"

	end

	file.write "</libraries>\n"

end

global_elem.find("modules/module").each do
	|module_elem|

	module_name = module_elem["name"]
	package_name = module_name.gsub "-", ""

	create_xml module_name, "build-xml", "build.xml"

	create_xml module_name, "classpath", ".classpath"
	create_xml module_name, "project", ".project"

	[
		"model",
		"misc",
		"web",
		"console",
		"api",
		"daemon",
		"hibernate",
	].each do
		|mode|

		create_xml \
			module_name,
			"beans-xml",
			"src/txt2/#{package_name}/#{mode}/#{module_name}-#{mode}-beans.xml",
			"mode" => mode

	end

	create_xml module_name, "console-web-xml",
		"console/web-live.xml",
		"mode" => "live"

	create_xml module_name, "console-web-xml",
		"console/web-test.xml",
		"mode" => "test"

	create_xml module_name, "api-web-xml",
		"api/web-live.xml",
		"mode" => "live"

	create_xml module_name, "api-web-xml",
		"api/web-test.xml",
		"mode" => "test"

	create_xml module_name, "server-xml",
		"console/server-test.xml",
		"mode" => "test"

	[ "test", "api/files", "console/files" ].each do
		|dir|

		FileUtils.mkdir_p "txt2-#{module_name}/#{dir}"
		#FileUtils.touch "txt2-#{module_name}/#{dir}/.mark"

	end

end
