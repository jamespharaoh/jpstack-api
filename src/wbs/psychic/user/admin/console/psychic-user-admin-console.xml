<console-module
	name="psychic-user-admin">

<!--
package wbs.psychic.user.admin.console;

import java.util.List;

import javax.inject.Inject;
import javax.inject.Named;
import javax.inject.Provider;

import wbs.framework.application.annotations.SingletonComponent;
import wbs.platform.console.context.BabyContextBuilder;
import wbs.platform.console.context.ContextTab;
import wbs.platform.console.forms.FormField;
import wbs.platform.console.module.AbstractConsoleModule;
import wbs.platform.console.responder.ConsoleFile;
import wbs.platform.console.tab.TabContextResponder;
import wbs.platform.object.settings.SettingsPageBuilder;
import wbs.psychic.bill.console.PsychicUserAccountConsoleHelper;
import wbs.psychic.user.core.console.PsychicUserConsoleHelper;

@SingletonComponent ("psychicUserAdminConsoleModule")
public class PsychicUserAdminConsoleModule
	extends AbstractConsoleModule {

	@Inject PsychicUserConsoleHelper psychicUserHelper;
	@Inject PsychicUserAccountConsoleHelper psychicUserAccountHelper;

	@Inject Provider<BabyContextBuilder> babyContextBuilder;
	@Inject Provider<ConsoleFile> consoleFile;
	@Inject Provider<ContextTab> contextTab;
	@Inject Provider<SettingsPageBuilder> settingsPageBuilder;
	@Inject Provider<TabContextResponder> tabContextResponder;

	@Inject @Named
	List<FormField> psychicUserAdminBillModeFields;

	@Override
	public void init () {

		// context

		babyContextBuilder.get ()
			.consoleModule (this)
			.consoleHelper (psychicUserHelper)
			.shortName ("admin")
			.friendlyName ("admin")
			.defaultFile ("psychicUser.admin.billMode")
			.addPrivKey ("psychic.userAdmin")
			.addParentLink ("psychic")
			.tabLocation ("admin")
			.build ();

		// credit mode page

		settingsPageBuilder.get ()
			.consoleModule (this)
			.consoleHelper (psychicUserAccountHelper)
			.privName ("psychic.userAdmin")
			.fields (psychicUserAdminBillModeFields)
			.shortName ("billMode")
			.longName ("billMode")
			.friendlyShortName ("bill mode")
			.friendlyLongName ("bill mode")
			.contextType ("psychicUser.admin")
			.responderName ("psychicUserAdminBillModeResponder")
			.fileName ("psychicUser.admin.billMode")
			.tabName ("psychicUser.admin.billMode")
			.build ();

		// credit page

		addContextTab (
			"end",
			contextTab.get ()
				.name ("psychicUser.admin.credit")
				.defaultLabel ("Credit")
				.localFile ("psychicUser.admin.credit"),
			"psychicUser.admin");

		addContextFile (
			"psychicUser.admin.credit",
			consoleFile.get ()
				.getResponderName ("psychicUserAdminCreditResponder")
				.postActionName ("psychicUserAdminCreditAction"),
			"psychicUser.admin");

		addResponder (
			"psychicUserAdminCreditResponder",
			tabContextResponder.get ()
				.tab ("psychicUser.admin.credit")
				.title ("Credit")
				.pagePartName ("psychicUserAdminCreditPart"));

	}

}

package wbs.psychic.user.admin.console;

import java.util.List;

import javax.inject.Inject;
import javax.inject.Provider;

import wbs.framework.application.annotations.SingletonComponent;
import wbs.platform.console.forms.EnumFormField;
import wbs.platform.console.forms.FormField;
import wbs.platform.console.forms.FormFieldsBuilder;
import wbs.platform.console.forms.IntFormField;
import wbs.platform.console.forms.ObjectFormField;
import wbs.platform.console.forms.TextFormField;
import wbs.platform.console.forms.TimestampFormField;
import wbs.platform.console.forms.YesNoFormField;
import wbs.psychic.bill.console.PsychicUserAccountConsoleHelper;

@SingletonComponent ("psychisUserAdminConsoleConfig")
public
class PsychicUserAdminConsoleConfig {

	@Inject
	PsychicBillModeConsoleHelper psychicBillModeConsoleHelper;

	@Inject
	PsychicUserAccountConsoleHelper psychicUserAccountConsoleHelper;

	@Inject
	Provider<EnumFormField> enumField;

	@Inject
	Provider<FormFieldsBuilder> fieldsBuilder;

	@Inject
	Provider<IntFormField> intField;

	@Inject
	Provider<ObjectFormField> objectField;

	@Inject
	Provider<TextFormField> textField;

	@Inject
	Provider<TimestampFormField> timestampField;

	@Inject
	Provider<YesNoFormField> yesNoField;

	@SingletonComponent ("psychicUserAdminCreditFields")
	public
	List<FormField> psychicUserAdminCreditFields () {

		return fieldsBuilder.get ()
			.fields (

				intField.get ()
					.name ("creditAmount"),

				intField.get ()
					.name ("paymentAmount"),

				textField.get ()
					.name ("details"))

			.build ();

	}

	@SingletonComponent ("psychicCreditLogFields")
	public
	List<FormField> psychicCreditLogFields () {

		return fieldsBuilder.get ()
			.fields (

				timestampField.get ()
					.name ("timestamp"),

				objectField.get ()
					.name ("user"),

				intField.get ()
					.name ("paymentAmount"),

				intField.get ()
					.name ("creditAmount"),

				textField.get ()
					.name ("detailsText")
					.label ("Details"),

				yesNoField.get ()
					.name ("gift"))

			.build ();

	}

	@SingletonComponent ("psychicUserAdminBillModeFields")
	public
	List<FormField> psychicUserAdminBillModeFields () {

		return fieldsBuilder.get ()
			.consoleHelper (psychicUserAccountConsoleHelper)
			.fields (

				enumField.get ()
					.name ("billMode")
					.enumHelper (psychicBillModeConsoleHelper))

			.build ();

	}

}
-->

</console-module>
